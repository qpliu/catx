#!/bin/sh
exec 2>&1
LILYPOND_VERSION="2.20.0"
HAVE_TIMIDITY=`type timidity >/dev/null 2>&1;echo $?`
HAVE_FFMPEG=`type ffmpeg >/dev/null 2>&1;echo $?`
set -e
pwd=`pwd`
name=`basename "$pwd"`
buildbuild=`dirname "$0"`/`readlink "$0"`
build=`dirname "$buildbuild"`
cd "$build"
build=`pwd`
PARTS="$*"
BINDIR="$build/bin/$$"
rm -rf "$BINDIR"
mkdir -p "$BINDIR/junk" "$BINDIR"/bin "$BINDIR"/src "$BINDIR"/java
find "$build/bin" -mindepth 1 -maxdepth 1 -type d -mtime +1 -exec mv '{}' "$BINDIR/junk" ';'
rm -rf "$BINDIR/junk"
cd "$BINDIR"/java
ln "$build"/java/* .
javac -Xlint *.java
cd "$build"
ln swing.ly *.i *.wav timidity_extra_silence.cfg "$BINDIR"/src
cp "$pwd"/* "$BINDIR"/src||true
cd "$BINDIR"/src
if test -x run_before
then
    ./run_before
fi
for a in *tabs
do
    if test -f "$a"
    then
	aa=`basename "$a" tabs`
	"$build/tabsToLy.py" <"$a" >"$aa"
    fi
done
for a in *colors
do
    if test -f "$a"
    then
	aa=`basename "$a" colors`
	"$build/synesthesia.py" <"$a" >"$aa"
    fi
done
for a in *_dotext
do
    if test -f "$a"
    then
	b=`basename "$a" _dotext`
	"$build/dotext.py" "$b"
    fi
done
for a in *.mp3
do
    if test -f "$a" -a "$HAVE_FFMPEG" = 0
    then
	b=`basename "$a" .mp3`
	ffmpeg </dev/null -loglevel 16 -i "$a" "$b".wav
    fi
done
echo "name=$name" >../bin/out.aarin
sed <music -n -e 's/^% ROBOT \(.*\)$/\1/p' >>../bin/out.aarin
MERGEMIDI=`sed <music -n -e 's/^% MERGEMIDI \(.*\)$/\1/p'`
for part in $PARTS
do
    if test "x$part" = "xmidi"
    then
	merge="$MERGEMIDI"
# Make sure these names of midi tracks agree with aarinrobo/c/midi.c
	for midi in midiAarinrobo midiCue midiGg midiPeter midiKav midiSusan midiBass midiKaraoke midiKaraokeTwo midiMuted midiOne midiTwo
	do
	    mkdir "../src-$midi"
	    for a in *
	    do
		"$build/doif.py" <"$a" >"../src-$midi/$a" "$midi"
	    done
	    cd "../src-$midi"
	    if grep -q "$midi" *
	    then
		cat <<EOF >in.ly
\version "$LILYPOND_VERSION"
\include "header.i"
\include "music"
\score {
    \unfoldRepeats \articulate \keepWithTag #'($midi keep) \removeWithTag #'(removeWithUnfold) \midimusic
    \midi { }
}
EOF
		lilypond -l WARN -o out in.ly
		cd ../src
		merge="$merge $midi ../src-$midi/out.midi"
	    fi
	done
	java -cp ../java MergeMidi $merge >out.midi
        if test "$HAVE_TIMIDITY" = 0 -a "$HAVE_FFMPEG" = 0
	then
	    TIMIDITY_EXTRA_CFG="-c timidity_extra_silence.cfg"
	    if test -f timidity_extra.cfg
	    then
		TIMIDITY_EXTRA_CFG="$TIMIDITY_EXTRA_CFG -c timidity_extra.cfg"
	    fi
	    timidity $TIMIDITY_EXTRA_CFG -OF -o out.flac out.midi
	    ffmpeg </dev/null -loglevel 16 -i out.flac out.mp3
	    cp out.midi "../bin/$name.midi"
	    if test -d /share/music
	    then
		cp out.mp3 "/share/music/mp3/$name.mp3"
		cp out.midi "/share/music/midi/$name.midi"
		echo "midi_file=../midi/$name.midi" >>../bin/out.aarin
	    fi
        fi
    else
	mkdir "../src-$part"
	for a in *
	do
	    "$build/doif.py" <"$a" >"../src-$part/$a" "$part"
	done
	cd "../src-$part"
	part1=`echo $part|sed 's/1/One/g;s/2/Two/g;s/3/Three/g;s/4/Four/g;s/5/Five/g;s/6/Six/g;s/7/Seven/g;s/8/Eight/g'`
	cat <<EOF >in.ly
\version "$LILYPOND_VERSION"
\include "header.i"
\include "music"
\score {
    \keepWithTag #'(${part1}Part keep) \layoutmusic
    \layout {
	indent = 0\cm
	short-indent = 0\cm
	ragged-last = ##t
    }
}
EOF
	lilypond -l WARN -o out in.ly
	cp out.pdf "../bin/${name}_${part}.pdf"
	if test "$part" = gg
	then
	    echo "default_pdf_file=../pdf/$name/$part.pdf" >>../bin/out.aarin
	fi
	echo "pdf_file=../pdf/$name/$part.pdf" >>../bin/out.aarin
	if test -d /share/music
	then
	    mkdir -p "/share/music/pdf/$name"
	    cp out.pdf "/share/music/pdf/$name/$part.pdf"
	    rm -rf "/share/music/svg/$name/$part"
	    mkdir -p "/share/music/svg/$name/$part"
	    page=1
	    while pdf2svg out.pdf temp.svg $page >/dev/null 2>&1
	    do
		java -cp ../java FindMeasuresInSvg "measure=$part $page" <temp.svg >>../bin/out.aarin
		gzip <temp.svg >"/share/music/svg/$name/$part/$page.svg.gz"
		page=`echo print $page+1|python`
	    done
	fi
    fi
    cd ../src
done
cd ..
if test -d /share/music
then
    cp bin/out.aarin "/share/music/aarin/$name.aarin"
    grep '^measure=' bin/out.aarin|cut -f 1 -d ' '|uniq -c
fi
